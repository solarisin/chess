name: publish-github-nuget-package-on-release
on:
  release:
    types: [ published ]
  workflow_dispatch:
env:
  PROJECT_FOLDER: ./src/Solarisin.Chess.Shared/
  PROJECT_PATH: ./src/Solarisin.Chess.Shared/Solarisin.Chess.Shared.csproj
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Determine package version
        uses: actions/github-script@v4
        id: get-version
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
        with:
          script: |
            const { TAG_NAME } = process.env;
            const release_ver = `${TAG_NAME}`;
            let no_v = release_ver;
            if(release_ver.startsWith('v')) {
              no_v = release_ver.substring(1);
            }
            core.setOutput('package-version', no_v);
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET build dependencies
        uses: ./.github/workflows/composite/bootstrap-dotnet
        with:
          sdk: true
          sdk-version: 6.0.x
          msbuild: false
          github-packages: true
          github-username: ${{ github.actor }}
          github-secret: ${{ secrets.GITHUB_TOKEN }}
      - name: .NET Build Solution
        run: >
          dotnet build $PROJECT_PATH
          -p:Version=${{steps.get-version.outputs.package-version}}
          --configuration Release
      - name: Create the package
        run: >
          dotnet pack $PROJECT_PATH
          -p:PackageVersion=${{steps.get-version.outputs.package-version}}
          --configuration Release
      - name: Publish NuGet package to GitHub
        run: >
          dotnet nuget push $PROJECT_FOLDERbin/Release/*.nupkg
          --source 'github'
          --api-key '${{ secrets.GITHUB_TOKEN }}'
          --skip-duplicate
